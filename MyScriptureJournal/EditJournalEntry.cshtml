@{
    var book = "";
    var chapter = 0;
    var verse = 0;
    var text = "";
    var note = "";
    var journalId = "";

    DateTime myUpdatedDateTime = DateTime.Now;
    string sqlUpdatedDate = "";

    if (!IsPost)
    {
        if (!Request.QueryString["Id"].IsEmpty() && Request.QueryString["Id"].IsInt())
        {
            journalId = Request.QueryString["ID"];
            var db = Database.Open("JournalDatabase");
            var dbCommand = "SELECT * FROM JournalTable WHERE Id = @0";
            var row = db.QuerySingle(dbCommand, journalId);
            if (row != null)
            {
                book = row.Book;
                chapter = row.Chapter;
                verse = row.Verse;
                text = row.Text;
                note = row.Note;
            }
            else
            {
                Validation.AddFormError("No entry was found for that ID.");
            }
        }
        else
        {
            Validation.AddFormError("No journal entry was selected.");
        }
    }

    if (IsPost)
    {
        Validation.RequireField("book", "You must enter a book");
        Validation.RequireField("chapter", "Chapter number is required");
        Validation.RequireField("verse", "You haven't entered a verse number");
        Validation.RequireField("text", "You haven't entered the verse text");
        Validation.RequireField("note", "You haven't entered a note");
        Validation.RequireField("journalId", "No journal ID was submitted!");
        Validation.Add("chapter", Validator.Integer("Chapter must be an integer"));
        Validation.Add("verse", Validator.Integer("Verse must be an integer"));

        book = Request.Form["Book"];
        chapter = Convert.ToInt32(Request.Form["Chapter"]);
        verse = Convert.ToInt32(Request.Form["Verse"]);
        text = Request.Form["Text"];
        note = Request.Form["Note"];
        journalId = Request.Form["journalId"];

        if (Validation.IsValid())
        {
            sqlUpdatedDate = myUpdatedDateTime.ToString("yyyy-MM-dd HH:mm:ss.fff");
            var db = Database.Open("JournalDatabase");
            var updateCommand = "UPDATE JournalTable SET Book=@0, Chapter=@1, Verse=@2, Text=@3, Note=@4, Date=@5 WHERE Id=@6";
            db.Execute(updateCommand, book, chapter, verse, text, note, sqlUpdatedDate, journalId);
            Response.Redirect("~/ScriptureJournalMain");
        }
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Edit a Journal Entry</title>
    <style>
        .validation-summary-errors {
            border: 2px dashed red;
            color: red;
            font-weight: bold;
            margin: 12px;
        }
    </style>
</head>
<body>
    <h1>Edit a Journal Entry</h1>
    @Html.ValidationSummary()
    <form method="post">
        <fieldset>
            <legend>Entry Information</legend>

            <p>
                <label for="book">Book:</label>
                <input type="text" name="book" value="@book" />
            </p>

            <p>
                <label for="chapter">Chapter:</label>
                <input type="text" name="chapter" value="@chapter" />
            </p>

            <p>
                <label for="verse">Verse:</label>
                <input type="text" name="verse" value="@verse" />
            </p>

            <p>
                <label for="text">Text:</label>
                <input type="text" name="text" value="@text" />
            </p>

            <p>
                <label for="note">Note:</label>
                <input type="text" name="note" value="@note" />
            </p>

            <input type="hidden" name="journalId" value="@journalId" />

            <p><input type="submit" name="buttonSubmit" value="Submit Changes" /></p>
        </fieldset>
    </form>
    <p><a href="~/ScriptureJournalMain">Return to journal</a></p>
</body>
</html>